function generateBC(url, separator) {
    var breadcrumbs  = "",
        ignoreList   = ["the","of","in","from","by","with","and", "or", "for", "to", "at", "a"],
        removeAfter  = [".htm",".php",".asp","?","#","index"],
        removeBefore = [".com",".uk",".fr",".it",".pi",".ca",".de"];
    for (a = 0; a < removeBefore.length; a++) {
          if (url.includes(removeBefore[a]))  url = url.substr(url.indexOf(removeBefore[a]));
    }
    for (b = 0; b < removeAfter.length; b++) {
          if (url.includes(removeAfter[b]))   url = url.substr(0,url.indexOf(removeAfter[b]));
    }
    var elements = url.split("/");
    if (elements[elements.length-1].length == 0) elements.pop();
    
    for (i = 0; i < elements.length; i++) {
      if (elements[i].length > 30)  {
        var tooLong = elements[i].split("-");
        var acronym = "";
        for (a = 0; a < tooLong.length; a++)  {
          if (ignoreList.indexOf(tooLong[a]) == -1)  {
            acronym = acronym.concat(tooLong[a][0]);
          }
        }
      }
      if (i === 0 || i === elements.length - 1) {
          if (i === elements.length - 1 && i === 0) {
              elements[i] = "HOME";
              breadcrumbs = breadcrumbs.concat('<span class="active">' + (elements[i].length > 30 ? acronym : (elements[i].replace(/-/g," "))).toUpperCase() + '</span>');
          } else if (i == 0) {
              breadcrumbs = breadcrumbs.concat('<a href="/">HOME</a>');
              breadcrumbs = breadcrumbs.concat(separator); 
          } else {
                  breadcrumbs = breadcrumbs.concat('<span class="active">' + (elements[i].length > 30 ? acronym : (elements[i].replace(/-/g," "))).toUpperCase() + '</span>');
          }
      } else  {
          var urlFragment = elements[i];
          if (i > 1 && i !== elements.length - 1) {
              for (b = (i-1); b > 0; b--)  {
                urlFragment = elements[b].concat('/' + urlFragment);
              }
          } 
          breadcrumbs = breadcrumbs.concat('<a href="/' + urlFragment + '/">' + (elements[i].length > 30 ? acronym : (elements[i].replace(/-/g," "))).toUpperCase() + '</a>');
          breadcrumbs = breadcrumbs.concat(separator); 
      }
    }
    return breadcrumbs;
}

console.log(generateBC("www.microsoft.com/important/confidential/docs/index.htm#top", " * "));






function generateBC(url, separator) {
  var arr = url.replace(/((\/index)?\.(html?|(ph|as)p))|(\?.+|#.+|https?:\/\/|\/$)/g, '').split('/'), link='';
  return arr.map(function(v, i, a) {
    if(a.length === 1) {
      return '<span class="active">HOME</span>'
    } else if(i === a.length -1) {
      return '<span class="active">'+ acronymize(v) +'</span>';   
    } else if(i===0) {
      return '<a href="/">HOME</a>';      
    } else {
      link = link ? link + '/' + v : v; 
      return '<a href="/'+ link +'/">'+ acronymize(v) +'</a>';
    }
  }).join(separator);
}

function acronymize(str) {
  var removeList = ["the","of","in","from","by","with","and", "or", "for", "to", "at", "a"],
      re = new RegExp("^(" + removeList.join('|') + ")$"), newStr = '';
  if(str.length > 30) {
    str.split('-').forEach(v => !re.test(v) ? newStr += v[0] : undefined);
    return newStr.toUpperCase();
  } else {
    return str.replace(/-/g, ' ').toUpperCase();;
  }
}
